# hw definition file for processing by chibios_hwdef.py

# USB setup
USB_STRING_MANUFACTURER "RobotMad"
USB_STRING_PRODUCT "SkyBot"
USB_STRING_SERIAL  "%SERIAL%"

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 16000000

define STM32_HSE_BYPASS

# board ID for firmware load
APJ_BOARD_ID 1007

FLASH_SIZE_KB 2048

# with 2M flash we can afford to optimize for speed
env OPTIMIZE -O2

FLASH_RESERVE_START_KB 128

# board voltage
STM32_VDD 330U

define HAL_STORAGE_SIZE 16384

# These are the pins for SWD debugging with a STlinkv2 or black-magic probe.
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

PF12 BATT_VOLTAGE_SENS ADC1 SCALE(1)
#PA3 BATT_CURRENT_SENS ADC1 SCALE(1)


# order of I2C buses
I2C_ORDER I2C1 I2C2 I2C3 I2C4

# I2C
PB6 I2C1_SCL I2C1
PB7 I2C1_SDA I2C1

# the 2nd I2C bus
PF1 I2C2_SCL I2C2
PF0 I2C2_SDA I2C2

# the 3rd I2C bus
PA8 I2C3_SCL I2C3
PC9 I2C3_SDA I2C3


# the 4th I2C bus
PF14 I2C4_SCL I2C4
PF15 I2C4_SDA I2C4


#SPI
PG11 SPI1_SCK SPI1
PG9 SPI1_MISO SPI1
PD7 SPI1_MOSI SPI1
PG10 SDCARD_CS CS

PC10 SPI3_SCK SPI3
PC11 SPI3_MISO SPI3
PC12 SPI3_MOSI SPI3
PC5 BMP280_CS CS

PE2 SPI4_SCK SPI4
PE5 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4
PE4 MPU_CS CS


# order of UARTs (and USB)
UART_ORDER OTG1 UART4 USART2 USART3 USART6 UART7 UART8 

#USB
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1
#PB13 VBUS INPUT OPENDRAIN

# UART4 serial GPS
PD1 UART4_TX UART4
PD0 UART4_RX UART4 NODMA

#  USART6 to IO
PC6 USART6_TX USART6
PC7 USART6_RX USART6

# USART1
#PA11 USART1_CTS_NSS USART1
#PA12 USART1_RTS USART1
#PA9 USART1_TX USART1
#PA10 USART1_RX USART1

# USART2
PA0 USART2_CTS_NSS USART2
PA1 USART2_RTS USART2
PA2 USART2_TX USART2
PA3 USART2_RX USART2

# USART3
PD8 USART3_TX USART3
PD9 USART3_RX USART3
PD11 USART3_CTS USART3
PD12 USART3_RTS USART3

# UART8
PE0 UART8_RX UART8
PE1 UART8_TX UART8 NODMA

# UART7 maps to uartF in the HAL (serial5 in SERIALn_ parameters).
PF6 UART7_RX UART7
PF7 UART7_TX UART7
PF9 UART7_CTS UART7
PF8 UART7_RTS UART7


# PWM output for buzzer
PB3 TIM2_CH2 TIM2 GPIO(77) ALARM

# This defines a couple of general purpose outputs, mapped to GPIO
# numbers 1 and 2 for users.
PB4 EXTERN_GPIO1 OUTPUT GPIO(1)
PB8 EXTERN_GPIO2 OUTPUT GPIO(2)
PB9 EXTERN_GPIO3 OUTPUT GPIO(3)
PB0 EXTERN_GPIO4 OUTPUT GPIO(4)


PE14 TIM1_CH4 TIM1 PWM(1) GPIO(50)
PE13 TIM1_CH3 TIM1 PWM(2) GPIO(51)
PE11 TIM1_CH2 TIM1 PWM(3) GPIO(52)
PE9  TIM1_CH1 TIM1 PWM(4) GPIO(53)
#PD13 TIM4_CH2 TIM4 PWM(5) GPIO(54)
#PD14 TIM4_CH3 TIM4 PWM(6) GPIO(55)

define BOARD_PWM_COUNT_DEFAULT 4


# This is the pin to enable the sensors rail.
PE3 VDD_3V3_SENSORS_EN OUTPUT HIGH

# Define a LED, mapping it to GPIO(0). LOW will illuminate the LED
PB1 FMU_LED_AMBER OUTPUT LOW GPIO(0)
PB2 LED1 OUTPUT LOW
PF11 LED2 OUTPUT LOW



SPIDEV icm20948     SPI4 DEVID3 MPU_CS  MODE3  4*MHZ  8*MHZ
SPIDEV bmp280     SPI3 DEVID2 BMP280_CS MODE3 1*MHZ 8*MHZ
SPIDEV sdcard     SPI1 DEVID1 SDCARD_CS MODE0 400*KHZ 25*MHZ


#imu direction
#IMU icm20948 SPI:icm20948 ROTATION_ROLL_180_YAW_270
#IMU icm20948 SPI:icm20948 ROTATION_PITCH_180
IMU icm20948 SPI:icm20948 ROTATION_YAW_270

# compass as part of ICM20948
COMPASS AK09916:probe_ICM20948 0 ROTATION_ROLL_180_YAW_90

# This is the invensense data-ready pin. We don't use it in the
# default driver.
PD15 MPU_DRDY INPUT

define HAL_DEFAULT_INS_FAST_SAMPLE 5

BARO BMP280 SPI:bmp280

define HAL_PROBE_EXTERNAL_I2C_BAROS

#define HAL_BARO_ALLOW_INIT_NO_BARO

# also probe for external compasses
define HAL_PROBE_EXTERNAL_I2C_COMPASSES

#define BOARD_TYPE_DEFAULT 3

# allow to have have a dedicated safety switch pin
define HAL_HAVE_SAFETY_SWITCH 1

define HAL_OS_FATFS_IO 1
define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

DMA_NOSHARE SPI1* SPI4* USART6*
